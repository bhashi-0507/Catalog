import org.json.JSONObject;
import java.util.HashMap;
import java.util.Scanner;

public class ShamirSecretSharing {

    // Function to decode y values with a given base
    public static int decodeValue(String base, String value) {
        return Integer.parseInt(value, Integer.parseInt(base));
    }

    // Function to apply Lagrange Interpolation and find the constant term 'c'
    public static double lagrangeInterpolation(HashMap<Integer, Integer> points) {
        double constantTerm = 0.0;

        for (Integer xi : points.keySet()) {
            double li = 1.0;
            for (Integer xj : points.keySet()) {
                if (!xj.equals(xi)) {
                    li *= (0.0 - xj) / (xi - xj); 
                }
            }
            constantTerm += li * points.get(xi); 
        }
        return constantTerm;
    }

    // Function to parse JSON and extract values for points
    public static HashMap<Integer, Integer> extractPoints(JSONObject input) {
        HashMap<Integer, Integer> points = new HashMap<>();
        
        for (String key : input.keySet()) {
            if (!key.equals("keys")) {
                JSONObject pointData = input.getJSONObject(key);
                String base = pointData.getString("base");
                String value = pointData.getString("value");

                int decodedY = decodeValue(base, value);
                int x = Integer.parseInt(key);
                
                points.put(x, decodedY);
            }
        }
        return points;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter JSON input:");
        String inputJsonString = scanner.nextLine();
        
        // Parse the input JSON string
        JSONObject inputJson = new JSONObject(inputJsonString);
        JSONObject keys = inputJson.getJSONObject("keys");
        int n = keys.getInt("n");
        int k = keys.getInt("k");

        // Extract points (x, y) from JSON and decode them
        HashMap<Integer, Integer> points = extractPoints(inputJson);

        // Find the constant term (c) using Lagrange Interpolation
        double constantTerm = lagrangeInterpolation(points);

        // Print the result
        System.out.println("The constant term (c) is: " + constantTerm);
    }
}
